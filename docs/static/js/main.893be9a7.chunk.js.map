{"version":3,"sources":["components/Footer.js","hooks/useForm.js","components/FormTasks.js","components/Button.js","components/Header.js","components/TaskItem.js","components/TaskGroup.js","reducer/todoReducer.js","TodoTracker.js","index.js"],"names":["Footer","className","useForm","initialState","useState","formState","setFormState","handleInputChange","target","name","value","reset","FormTasks","addTodo","text","day","reminder","onSubmit","e","preventDefault","id","Date","getTime","type","placeholder","onChange","checked","Button","setBtn","btnState","onClick","style","backgroundColor","Header","TaskItem","todo","deleteTodo","toggle","onDoubleClick","color","cursor","TaskGroup","todos","map","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoTracker","useReducer","dispatch","btnHeader","setBtnHeader","useEffect","setItem","stringify","newTodo","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.893be9a7.chunk.js","sourcesContent":["\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>Copyright @ 2021</p>            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n\r\n    const [formState, setFormState] = useState( initialState );\r\n \r\n    const handleInputChange = ( {target: {name, value}} )=>{\r\n        setFormState({\r\n            ...formState,\r\n            [name]: name === 'reminder' ? !formState[name] : value\r\n\r\n        })\r\n   }\r\n\r\n   const reset = () =>{\r\n       setFormState( initialState );\r\n   }\r\n\r\n    return[\r\n        formState,\r\n        handleInputChange,\r\n        reset\r\n    ]\r\n}\r\n\r\nexport default useForm\r\n","import useForm from \"../hooks/useForm\";\r\n\r\nconst FormTasks = ({ addTodo }) => {\r\n\r\n    const [ { text, day, reminder }, handleInputChange, reset ] = useForm({ text:'', day:'', reminder: false });\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        addTodo( { text, day, reminder, id: new Date().getTime() } );\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n          <form onSubmit={ handleSubmit }>\r\n            <div className=\"form__item\">\r\n                <label className=\"label\">Task</label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add Task\" \r\n                    className=\"input\" \r\n                    name=\"text\"\r\n                    value={ text }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </div>\r\n            <div className=\"form__item\">\r\n                <label className=\"label\">Day & Time</label>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add Day & Time\" \r\n                    className=\"input\" \r\n                    name='day'\r\n                    value={ day }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </div>\r\n            <div className=\"form__item form__item--check\">\r\n                <label className=\"checkbox\">Set Reminder</label>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    name=\"reminder\"\r\n                    checked={ reminder }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </div>\r\n\r\n            <button className=\"btn btn--submit\">Save Task</button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default FormTasks\r\n","\r\nconst Button = ({ setBtn, btnState }) => {\r\n    \r\n    return <button \r\n                className=\"btn\"\r\n                onClick={ () => setBtn( !btnState ) }\r\n                style={{backgroundColor: btnState ? 'lightgreen':'red' }}\r\n           >\r\n               { btnState ? 'Close': 'Add' }\r\n            </button>\r\n}\r\n\r\nexport default Button\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ setBtn, btnState }) => { \r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Task Tracker</h1>\r\n            <Button\r\n                setBtn={ setBtn }\r\n                btnState={ btnState }\r\n            />\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst TaskItem = ( { todo:{ text, day, id, reminder }, deleteTodo, toggle }) => {\r\n\r\n    return (\r\n        <div \r\n            className={`task-item ${ reminder && 'border-left' }`}\r\n            onDoubleClick = { () => toggle( id ) }\r\n        >\r\n            <h4>{ text } <FaTimes \r\n                            onClick={ () => deleteTodo( id ) }\r\n                            style={{ color: 'red', cursor: 'pointer' }} \r\n                        />\r\n            </h4>\r\n            <p>{ day }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","import TaskItem from \"./TaskItem\";\r\n\r\nconst TaskGroup = ({ todos, deleteTodo, toggle }) => {\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            {\r\n                todos.map( todo =>{\r\n                   \r\n                    return <TaskItem \r\n                                key = { todo.id }\r\n                                todo={ todo }\r\n                                deleteTodo={ deleteTodo }\r\n                                toggle={ toggle }\r\n                            />                    \r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskGroup\r\n","\r\nconst todoReducer = ( state=[], action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case 'add':            \r\n            return [ ...state, action.payload ];\r\n        \r\n        case 'delete':\r\n            return state.filter( todo => todo.id !== action.payload );\r\n        \r\n        case 'toggle':\r\n            return state.map( todo => todo.id === action.payload \r\n                                            ? { ...todo, reminder: !todo.reminder }\r\n                                            : todo\r\n                             );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n  \r\n}\r\n\r\nexport default todoReducer\r\n","import { useEffect, useReducer, useState } from \"react\";\r\nimport Footer from \"./components/Footer\";\r\nimport FormTasks from \"./components/FormTasks\";\r\nimport Header from \"./components/Header\";\r\nimport TaskGroup from \"./components/TaskGroup\";\r\nimport todoReducer from \"./reducer/todoReducer\";\r\n\r\n\r\nconst init = () =>{\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n    \r\n}\r\n\r\nconst TodoTracker = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n    const [btnHeader, setBtnHeader] = useState(true) ; \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [ todos ])\r\n\r\n    const addTodo = ( newTodo ) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n\r\n    const deleteTodo = ( todoId ) => {\r\n        dispatch({\r\n            type: 'delete',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    const toggleReminder = ( todoId ) =>{        \r\n        dispatch( {\r\n            type: 'toggle',\r\n            payload: todoId \r\n        } ) \r\n    }\r\n\r\n    return (\r\n        \r\n            <div className='container'>\r\n\r\n                <Header \r\n                    setBtn={ setBtnHeader }\r\n                    btnState={ btnHeader }\r\n                />\r\n                \r\n                {btnHeader && <FormTasks addTodo={ addTodo } />}\r\n                { todos.length > 0 ?  <TaskGroup \r\n                                    todos={ todos } \r\n                                    deleteTodo={ deleteTodo }\r\n                                    toggle={ toggleReminder }\r\n                                />\r\n                                : 'No tasks to show'\r\n                }                \r\n                \r\n                <Footer />                \r\n            </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default TodoTracker\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoTracker from './TodoTracker';\n\nimport './index.css';\n\nReactDOM.render(\n  <TodoTracker />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}